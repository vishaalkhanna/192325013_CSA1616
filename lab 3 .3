# Install required packages if not installed
if(!require(e1071)) install.packages("e1071", dependencies=TRUE)
if(!require(rpart)) install.packages("rpart", dependencies=TRUE)
if(!require(rpart.plot)) install.packages("rpart.plot", dependencies=TRUE)
library(e1071)
library(rpart)
library(rpart.plot)

# Create the dataset
data <- data.frame(
  age = c("<=30", "<=30", "31-40", ">40", ">40", ">40", "31-40", "<=30", "<=30", ">40", "<=30", "31-40", "31-40", ">40"),
  income = c("high", "high", "high", "medium", "low", "low", "low", "medium", "low", "medium", "medium", "medium", "high", "medium"),
  student = c("no", "no", "no", "no", "yes", "yes", "no", "no", "yes", "yes", "yes", "yes", "no", "no"),
  credit_rating = c("fair", "excellent", "fair", "fair", "fair", "excellent", "excellent", "fair", "fair", "fair", "excellent", "excellent", "fair", "excellent"),
  buys_computer = c("no", "no", "yes", "yes", "yes", "no", "yes", "no", "yes", "yes", "yes", "yes", "yes", "no")
)

# Convert categorical variables to factors
data[] <- lapply(data, factor)

# Split data into training and test sets (80%-20% split)
set.seed(123)  # For reproducibility
train_indices <- sample(1:nrow(data), 0.8 * nrow(data))
train_data <- data[train_indices, ]
test_data <- data[-train_indices, ]

# ---- Naïve Bayes Classification ----
naive_bayes_model <- naiveBayes(buys_computer ~ ., data = train_data)
nb_predictions <- predict(naive_bayes_model, test_data)

# Print Naïve Bayes Results
cat("Naïve Bayes Confusion Matrix:\n")
print(table(Predicted = nb_predictions, Actual = test_data$buys_computer))

# ---- Decision Tree Classification ----
decision_tree_model <- rpart(buys_computer ~ ., data = train_data, method = "class")
rpart.plot(decision_tree_model, main="Decision Tree for Buys Computer", extra=104)

# Predict using Decision Tree
dt_predictions <- predict(decision_tree_model, test_data, type = "class")

# Print Decision Tree Results
cat("\nDecision Tree Confusion Matrix:\n")
print(table(Predicted = dt_predictions, Actual = test_data$buys_computer))
